{"ast":null,"code":"import { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/card\";\nimport * as i2 from \"@angular/material/table\";\nconst TABLE_DATA = [{\n  id: 1,\n  name: 'Bank of America',\n  description: \"Bank of America offers customers with various options\",\n  bankName: \"Bank of America\",\n  maxcredit: 3000,\n  interestRate: 10,\n  active: true,\n  recommendedScore: \"700-900\",\n  annualFee: 4,\n  termsAndConditions: \"Following are the terms and conditions\",\n  createdDate: \"2023-31-08\",\n  updatedDate: \"2023-31-08\"\n}, {\n  id: 2,\n  name: 'Bank of America',\n  description: \"Bank of America offers customers with various options\",\n  bankName: \"Bank of America\",\n  maxcredit: 3000,\n  interestRate: 10,\n  active: true,\n  recommendedScore: \"700-900\",\n  annualFee: 4,\n  termsAndConditions: \"Following are the terms and conditions\",\n  createdDate: \"2023-31-08\",\n  updatedDate: \"2023-31-08\"\n}, {\n  id: 3,\n  name: 'Bank of America',\n  description: \"Bank of America offers customers with various options\",\n  bankName: \"Bank of America\",\n  maxcredit: 3000,\n  interestRate: 10,\n  active: true,\n  recommendedScore: \"700-900\",\n  annualFee: 4,\n  termsAndConditions: \"Following are the terms and conditions\",\n  createdDate: \"2023-31-08\",\n  updatedDate: \"2023-31-08\"\n}];\nexport class CreditcardsComponent {\n  constructor() {\n    this.displayColumns = [\"select\", \"id\", \"name\", \"description\", \"bankName\", \"maxCredit\", \"interestRate\", \"active\", \"recommendedScore\"];\n    this.dataSource = new MatTableDataSource(TABLE_DATA);\n    this.selection = new SelectionModel(true, []);\n  }\n  ngAfterViewInit() {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  selectHandler(row) {\n    this.selection.toggle(row);\n  }\n  static #_ = this.ɵfac = function CreditcardsComponent_Factory(t) {\n    return new (t || CreditcardsComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreditcardsComponent,\n    selectors: [[\"app-creditcards\"]],\n    viewQuery: function CreditcardsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"list-credit-cards\"], [\"mat-table\", \"\"]],\n    template: function CreditcardsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0)(1, \"mat-card-header\")(2, \"mat-card-title\");\n        i0.ɵɵtext(3, \"Listing All Credit Cards\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"mat-card-content\");\n        i0.ɵɵelement(5, \"table\", 1);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    dependencies: [i1.MatCard, i1.MatCardContent, i1.MatCardHeader, i1.MatCardTitle, i2.MatTable],\n    styles: [\".list-credit-cards[_ngcontent-%COMP%] {\\n  margin: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY3JlZGl0Y2FyZHMvY3JlZGl0Y2FyZHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIubGlzdC1jcmVkaXQtY2FyZHMge1xyXG4gICAgbWFyZ2luOiAyMHB4O1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["MatTableDataSource","SelectionModel","MatPaginator","MatSort","TABLE_DATA","id","name","description","bankName","maxcredit","interestRate","active","recommendedScore","annualFee","termsAndConditions","createdDate","updatedDate","CreditcardsComponent","constructor","displayColumns","dataSource","selection","ngAfterViewInit","paginator","sort","selectHandler","row","toggle","_","_2","selectors","viewQuery","CreditcardsComponent_Query","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Kasutaja\\OneDrive\\Dokumendid\\AngularCRUD\\creditcardadmin\\src\\app\\creditcards\\creditcards.component.ts","C:\\Users\\Kasutaja\\OneDrive\\Dokumendid\\AngularCRUD\\creditcardadmin\\src\\app\\creditcards\\creditcards.component.html"],"sourcesContent":["import { Component, ViewChild } from '@angular/core';\nimport { CreditCard } from '../models/credit-card';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\n\nconst TABLE_DATA: CreditCard[] = [\n  {\n    id: 1,\n    name: 'Bank of America',\n    description: \"Bank of America offers customers with various options\",\n    bankName: \"Bank of America\",\n    maxcredit: 3000,\n    interestRate: 10,\n    active: true,\n    recommendedScore: \"700-900\",\n    annualFee: 4,\n    termsAndConditions: \"Following are the terms and conditions\",\n    createdDate: \"2023-31-08\",\n    updatedDate: \"2023-31-08\",\n  },\n  {\n    id: 2,\n    name: 'Bank of America',\n    description: \"Bank of America offers customers with various options\",\n    bankName: \"Bank of America\",\n    maxcredit: 3000,\n    interestRate: 10,\n    active: true,\n    recommendedScore: \"700-900\",\n    annualFee: 4,\n    termsAndConditions: \"Following are the terms and conditions\",\n    createdDate: \"2023-31-08\",\n    updatedDate: \"2023-31-08\",\n  },\n  {\n    id: 3,\n    name: 'Bank of America',\n    description: \"Bank of America offers customers with various options\",\n    bankName: \"Bank of America\",\n    maxcredit: 3000,\n    interestRate: 10,\n    active: true,\n    recommendedScore: \"700-900\",\n    annualFee: 4,\n    termsAndConditions: \"Following are the terms and conditions\",\n    createdDate: \"2023-31-08\",\n    updatedDate: \"2023-31-08\",\n  }\n];\n\n@Component({\n  selector: 'app-creditcards',\n  templateUrl: './creditcards.component.html',\n  styleUrls: ['./creditcards.component.scss']\n})\nexport class CreditcardsComponent {\n\n  displayColumns = [\"select\", \"id\", \"name\", \"description\", \"bankName\", \"maxCredit\", \"interestRate\", \"active\", \"recommendedScore\"];\n\n  dataSource = new MatTableDataSource(TABLE_DATA);\n\n  selection = new SelectionModel(true, []);\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  \n  ngAfterViewInit(){\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n\n  selectHandler(row: CreditCard){\n    this.selection.toggle(row as never);\n  }\n   \n}\n","<mat-card class=\"list-credit-cards\">\r\n    <mat-card-header>\r\n        <mat-card-title>Listing All Credit Cards</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        <table mat-table>\r\n\r\n        </table>\r\n    </mat-card-content>\r\n</mat-card>\r\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,yBAAyB;AAC5D,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;;;;AAEhD,MAAMC,UAAU,GAAiB,CAC/B;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,uDAAuD;EACpEC,QAAQ,EAAE,iBAAiB;EAC3BC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,IAAI;EACZC,gBAAgB,EAAE,SAAS;EAC3BC,SAAS,EAAE,CAAC;EACZC,kBAAkB,EAAE,wCAAwC;EAC5DC,WAAW,EAAE,YAAY;EACzBC,WAAW,EAAE;CACd,EACD;EACEX,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,uDAAuD;EACpEC,QAAQ,EAAE,iBAAiB;EAC3BC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,IAAI;EACZC,gBAAgB,EAAE,SAAS;EAC3BC,SAAS,EAAE,CAAC;EACZC,kBAAkB,EAAE,wCAAwC;EAC5DC,WAAW,EAAE,YAAY;EACzBC,WAAW,EAAE;CACd,EACD;EACEX,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,iBAAiB;EACvBC,WAAW,EAAE,uDAAuD;EACpEC,QAAQ,EAAE,iBAAiB;EAC3BC,SAAS,EAAE,IAAI;EACfC,YAAY,EAAE,EAAE;EAChBC,MAAM,EAAE,IAAI;EACZC,gBAAgB,EAAE,SAAS;EAC3BC,SAAS,EAAE,CAAC;EACZC,kBAAkB,EAAE,wCAAwC;EAC5DC,WAAW,EAAE,YAAY;EACzBC,WAAW,EAAE;CACd,CACF;AAOD,OAAM,MAAOC,oBAAoB;EALjCC,YAAA;IAOE,KAAAC,cAAc,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,UAAU,EAAE,WAAW,EAAE,cAAc,EAAE,QAAQ,EAAE,kBAAkB,CAAC;IAE/H,KAAAC,UAAU,GAAG,IAAIpB,kBAAkB,CAACI,UAAU,CAAC;IAE/C,KAAAiB,SAAS,GAAG,IAAIpB,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC;;EAMxCqB,eAAeA,CAAA;IACb;IACA;IACA,IAAI,CAACF,UAAU,CAACG,SAAS,GAAG,IAAI,CAACA,SAAS;IAC1C,IAAI,CAACH,UAAU,CAACI,IAAI,GAAG,IAAI,CAACA,IAAI;EAClC;EAGAC,aAAaA,CAACC,GAAe;IAC3B,IAAI,CAACL,SAAS,CAACM,MAAM,CAACD,GAAY,CAAC;EACrC;EAAC,QAAAE,CAAA,G;qBAtBUX,oBAAoB;EAAA;EAAA,QAAAY,EAAA,G;UAApBZ,oBAAoB;IAAAa,SAAA;IAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;uBAQpB/B,YAAY;uBAEZC,OAAO;;;;;;;;;;;;;QCnEpBgC,EAAA,CAAAC,cAAA,kBAAoC;QAEZD,EAAA,CAAAE,MAAA,+BAAwB;QAAAF,EAAA,CAAAG,YAAA,EAAiB;QAE7DH,EAAA,CAAAC,cAAA,uBAAkB;QACdD,EAAA,CAAAI,SAAA,eAEQ;QACZJ,EAAA,CAAAG,YAAA,EAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}